
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLOSEC CLOSEP COLON COMA CONDITION CTEF CTEI CTESTRING DIFERENT DIVIDE ELSE EQUAL FLOAT GREATERTHAN ID INT LESSTHAN MINUS OPENC OPENP OUTPUTPRINT PLUS PROGRAM SEMICOLON TIMES VAR\n        programa : PROGRAM ID COLON programAux\n    \n        programAux : vars bloque COLON vars\n        programAux : vars bloque\n        | vars\n    \n        vars : VAR d\n    \n        varsAux : COLON tipo SEMICOLON w\n          | COMA d\n    \n        w : d\n          | empty\n    \n        d : ID varsAux\n    \n        tipo : INT\n             | FLOAT\n    \n        bloque : OPENC blockAux CLOSEC\n    \n        blockAux : estatuto\n          | estatuto blockAux\n          | empty\n    \n        estatuto : asignacion\n                 | condicion\n                 | escritura\n    \n        asignacion : ID EQUAL expresion SEMICOLON\n    \n        escritura : OUTPUTPRINT OPENP escrituraAux CLOSEP SEMICOLON\n    \n        escrituraAux : expresion\n          | expresion COMA escrituraAux\n          | CTESTRING\n          | CTEI\n          | CTEF\n    \n        condicion : CONDITION OPENP expresion CLOSEP condicionAux SEMICOLON\n    \n        condicionAux : bloque\n          | bloque ELSE bloque\n    \n        expresion : exp x\n    \n        x : GREATERTHAN exp\n          | LESSTHAN exp\n          | DIFERENT exp\n          | empty\n    \n        exp : termino\n            | termino PLUS exp\n            | termino MINUS exp\n    \n        termino : factor\n                | factor TIMES termino\n                | factor DIVIDE termino\n    \n        factor : factorA\n               | factorB\n    \n        factorA : OPENP expresion CLOSEP\n    \n        factorB : varcte\n                | PLUS varcte\n                | MINUS varcte\n    \n        varcte : ID\n               | CTEI\n               | CTEF\n    \n        empty :\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,6,8,10,22,25,26,34,54,71,72,73,],[0,-1,-4,-3,-5,-10,-2,-13,-7,-50,-6,-8,-9,]),'ID':([2,7,9,14,16,17,18,24,28,29,30,39,40,44,54,55,57,58,59,61,62,65,66,70,84,86,],[3,11,19,19,-17,-18,-19,11,35,35,35,35,35,35,11,-20,35,35,35,35,35,35,35,35,-21,-27,]),'COLON':([3,8,11,26,],[4,12,23,-13,]),'VAR':([4,12,],[7,7,]),'OPENC':([6,10,22,34,54,68,71,72,73,87,],[9,-5,-10,-7,-50,9,-6,-8,-9,9,]),'CLOSEC':([9,13,14,15,16,17,18,27,55,84,86,],[-50,26,-14,-16,-17,-18,-19,-15,-20,-21,-27,]),'CONDITION':([9,14,16,17,18,55,84,86,],[20,20,-17,-18,-19,-20,-21,-27,]),'OUTPUTPRINT':([9,14,16,17,18,55,84,86,],[21,21,-17,-18,-19,-20,-21,-27,]),'COMA':([11,35,37,38,41,42,43,45,46,47,50,52,53,56,60,63,64,74,75,76,77,78,79,80,81,],[24,-47,-50,-35,-38,-41,-42,-44,-48,-49,70,-48,-49,-30,-34,-45,-46,-31,-32,-33,-36,-37,-39,-40,-43,]),'EQUAL':([19,],[28,]),'OPENP':([20,21,28,29,30,44,57,58,59,61,62,65,66,70,],[29,30,44,44,44,44,44,44,44,44,44,44,44,44,]),'INT':([23,],[32,]),'FLOAT':([23,],[33,]),'ELSE':([26,83,],[-13,87,]),'SEMICOLON':([26,31,32,33,35,36,37,38,41,42,43,45,46,47,56,60,63,64,69,74,75,76,77,78,79,80,81,82,83,88,],[-13,54,-11,-12,-47,55,-50,-35,-38,-41,-42,-44,-48,-49,-30,-34,-45,-46,84,-31,-32,-33,-36,-37,-39,-40,-43,86,-28,-29,]),'PLUS':([28,29,30,35,38,41,42,43,44,45,46,47,52,53,57,58,59,61,62,63,64,65,66,70,79,80,81,],[39,39,39,-47,61,-38,-41,-42,39,-44,-48,-49,-48,-49,39,39,39,39,39,-45,-46,39,39,39,-39,-40,-43,]),'MINUS':([28,29,30,35,38,41,42,43,44,45,46,47,52,53,57,58,59,61,62,63,64,65,66,70,79,80,81,],[40,40,40,-47,62,-38,-41,-42,40,-44,-48,-49,-48,-49,40,40,40,40,40,-45,-46,40,40,40,-39,-40,-43,]),'CTEI':([28,29,30,39,40,44,57,58,59,61,62,65,66,70,],[46,46,52,46,46,46,46,46,46,46,46,46,46,52,]),'CTEF':([28,29,30,39,40,44,57,58,59,61,62,65,66,70,],[47,47,53,47,47,47,47,47,47,47,47,47,47,53,]),'CTESTRING':([30,70,],[51,51,]),'TIMES':([35,41,42,43,45,46,47,52,53,63,64,81,],[-47,65,-41,-42,-44,-48,-49,-48,-49,-45,-46,-43,]),'DIVIDE':([35,41,42,43,45,46,47,52,53,63,64,81,],[-47,66,-41,-42,-44,-48,-49,-48,-49,-45,-46,-43,]),'GREATERTHAN':([35,37,38,41,42,43,45,46,47,52,53,63,64,77,78,79,80,81,],[-47,57,-35,-38,-41,-42,-44,-48,-49,-48,-49,-45,-46,-36,-37,-39,-40,-43,]),'LESSTHAN':([35,37,38,41,42,43,45,46,47,52,53,63,64,77,78,79,80,81,],[-47,58,-35,-38,-41,-42,-44,-48,-49,-48,-49,-45,-46,-36,-37,-39,-40,-43,]),'DIFERENT':([35,37,38,41,42,43,45,46,47,52,53,63,64,77,78,79,80,81,],[-47,59,-35,-38,-41,-42,-44,-48,-49,-48,-49,-45,-46,-36,-37,-39,-40,-43,]),'CLOSEP':([35,37,38,41,42,43,45,46,47,48,49,50,51,52,53,56,60,63,64,67,74,75,76,77,78,79,80,81,85,],[-47,-50,-35,-38,-41,-42,-44,-48,-49,68,69,-22,-24,-25,-26,-30,-34,-45,-46,81,-31,-32,-33,-36,-37,-39,-40,-43,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programAux':([4,],[5,]),'vars':([4,12,],[6,25,]),'bloque':([6,68,87,],[8,83,88,]),'d':([7,24,54,],[10,34,72,]),'blockAux':([9,14,],[13,27,]),'estatuto':([9,14,],[14,14,]),'empty':([9,14,37,54,],[15,15,60,73,]),'asignacion':([9,14,],[16,16,]),'condicion':([9,14,],[17,17,]),'escritura':([9,14,],[18,18,]),'varsAux':([11,],[22,]),'tipo':([23,],[31,]),'expresion':([28,29,30,44,70,],[36,48,50,67,50,]),'exp':([28,29,30,44,57,58,59,61,62,70,],[37,37,37,37,74,75,76,77,78,37,]),'termino':([28,29,30,44,57,58,59,61,62,65,66,70,],[38,38,38,38,38,38,38,38,38,79,80,38,]),'factor':([28,29,30,44,57,58,59,61,62,65,66,70,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'factorA':([28,29,30,44,57,58,59,61,62,65,66,70,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'factorB':([28,29,30,44,57,58,59,61,62,65,66,70,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'varcte':([28,29,30,39,40,44,57,58,59,61,62,65,66,70,],[45,45,45,63,64,45,45,45,45,45,45,45,45,45,]),'escrituraAux':([30,70,],[49,85,]),'x':([37,],[56,]),'w':([54,],[71,]),'condicionAux':([68,],[82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID COLON programAux','programa',4,'p_programa','main.py',81),
  ('programAux -> vars bloque COLON vars','programAux',4,'p_programAux','main.py',87),
  ('programAux -> vars bloque','programAux',2,'p_programAux','main.py',88),
  ('programAux -> vars','programAux',1,'p_programAux','main.py',89),
  ('vars -> VAR d','vars',2,'p_vars','main.py',94),
  ('varsAux -> COLON tipo SEMICOLON w','varsAux',4,'p_varsAux','main.py',99),
  ('varsAux -> COMA d','varsAux',2,'p_varsAux','main.py',100),
  ('w -> d','w',1,'p_w','main.py',105),
  ('w -> empty','w',1,'p_w','main.py',106),
  ('d -> ID varsAux','d',2,'p_d','main.py',111),
  ('tipo -> INT','tipo',1,'p_tipo','main.py',116),
  ('tipo -> FLOAT','tipo',1,'p_tipo','main.py',117),
  ('bloque -> OPENC blockAux CLOSEC','bloque',3,'p_bloque','main.py',122),
  ('blockAux -> estatuto','blockAux',1,'p_blockAux','main.py',127),
  ('blockAux -> estatuto blockAux','blockAux',2,'p_blockAux','main.py',128),
  ('blockAux -> empty','blockAux',1,'p_blockAux','main.py',129),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','main.py',134),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','main.py',135),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','main.py',136),
  ('asignacion -> ID EQUAL expresion SEMICOLON','asignacion',4,'p_asignacion','main.py',141),
  ('escritura -> OUTPUTPRINT OPENP escrituraAux CLOSEP SEMICOLON','escritura',5,'p_escritura','main.py',146),
  ('escrituraAux -> expresion','escrituraAux',1,'p_escrituraAux','main.py',151),
  ('escrituraAux -> expresion COMA escrituraAux','escrituraAux',3,'p_escrituraAux','main.py',152),
  ('escrituraAux -> CTESTRING','escrituraAux',1,'p_escrituraAux','main.py',153),
  ('escrituraAux -> CTEI','escrituraAux',1,'p_escrituraAux','main.py',154),
  ('escrituraAux -> CTEF','escrituraAux',1,'p_escrituraAux','main.py',155),
  ('condicion -> CONDITION OPENP expresion CLOSEP condicionAux SEMICOLON','condicion',6,'p_condicion','main.py',160),
  ('condicionAux -> bloque','condicionAux',1,'p_condicionAux','main.py',165),
  ('condicionAux -> bloque ELSE bloque','condicionAux',3,'p_condicionAux','main.py',166),
  ('expresion -> exp x','expresion',2,'p_expresion','main.py',171),
  ('x -> GREATERTHAN exp','x',2,'p_expresionAux','main.py',176),
  ('x -> LESSTHAN exp','x',2,'p_expresionAux','main.py',177),
  ('x -> DIFERENT exp','x',2,'p_expresionAux','main.py',178),
  ('x -> empty','x',1,'p_expresionAux','main.py',179),
  ('exp -> termino','exp',1,'p_exp','main.py',184),
  ('exp -> termino PLUS exp','exp',3,'p_exp','main.py',185),
  ('exp -> termino MINUS exp','exp',3,'p_exp','main.py',186),
  ('termino -> factor','termino',1,'p_termino','main.py',191),
  ('termino -> factor TIMES termino','termino',3,'p_termino','main.py',192),
  ('termino -> factor DIVIDE termino','termino',3,'p_termino','main.py',193),
  ('factor -> factorA','factor',1,'p_factor','main.py',198),
  ('factor -> factorB','factor',1,'p_factor','main.py',199),
  ('factorA -> OPENP expresion CLOSEP','factorA',3,'p_factorA','main.py',204),
  ('factorB -> varcte','factorB',1,'p_factorB','main.py',209),
  ('factorB -> PLUS varcte','factorB',2,'p_factorB','main.py',210),
  ('factorB -> MINUS varcte','factorB',2,'p_factorB','main.py',211),
  ('varcte -> ID','varcte',1,'p_varcte','main.py',216),
  ('varcte -> CTEI','varcte',1,'p_varcte','main.py',217),
  ('varcte -> CTEF','varcte',1,'p_varcte','main.py',218),
  ('empty -> <empty>','empty',0,'p_empty','main.py',223),
]
